name: Building Kernel sdm710

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Cleanup
        uses: rokibhasansagar/slimhub_actions@main

      - name: Prepare the environment
        run: |
          sudo apt update -y
          sudo apt upgrade -y
          sudo apt install -y flex bc bison git python zip build-essential tar wget swig python3-dev lz4
          sudo apt clean

      - name: Install toolchain
        run: |
          mkdir -p workspace
          cd workspace
          mkdir -p clang anykernel && cd clang
          wget -q https://snapshots.linaro.org/gnu-toolchain/13.0-2022.11-1/aarch64-linux-gnu/gcc-linaro-13.0.0-2022.11-x86_64_aarch64-linux-gnu.tar.xz
          wget -q https://snapshots.linaro.org/gnu-toolchain/13.0-2022.11-1/arm-linux-gnueabihf/gcc-linaro-13.0.0-2022.11-x86_64_arm-linux-gnueabihf.tar.xz
          wget -q https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-r475365.tar.gz
          tar -xf gcc-linaro-13.0.0-2022.11-x86_64_aarch64-linux-gnu.tar.xz
          tar -xf gcc-linaro-13.0.0-2022.11-x86_64_arm-linux-gnueabihf.tar.xz
          cp -r gcc-linaro-13.0.0-2022.11-x86_64_aarch64-linux-gnu/* .
          cp -r gcc-linaro-13.0.0-2022.11-x86_64_arm-linux-gnueabihf/* .
          tar -xf clang-r475365.tar.gz
          rm -rf gcc-linaro* *.gz *.xz

      - name: Clone repo
        run: |
          cd workspace
          sudo hostname jzinferno
          git config --global user.name "jzinferno"
          git config --global user.email "jekazinferno@gmail.com"
          git clone --depth=1 https://github.com/jzinferno/kernel_lenovo_sdm710.git kernel

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Build clang jd2019
        run: |
          export PATH=$(realpath workspace/clang/bin):$PATH
          cd workspace/kernel
          rm -rf out
          make LLVM=1 LLVM_IAS=1 O=out ARCH=arm64 jd2019_defconfig
          make LLVM=1 LLVM_IAS=1 O=out ARCH=arm64 -j$(nproc --all)
          cd out/arch/arm64/boot
          zip -r9 jd2019_kernel_clang_$(date +%Y%m%d).zip META-INF bin files Image.lz4-dtb dtbo.img
          mv *.zip ../../../../../anykernel

      - name: Build clang kunlun2
        run: |
          export PATH=$(realpath workspace/clang/bin):$PATH
          cd workspace/kernel
          rm -rf out
          make LLVM=1 LLVM_IAS=1 O=out ARCH=arm64 kunlun2_defconfig
          make LLVM=1 LLVM_IAS=1 O=out ARCH=arm64 -j$(nproc --all)
          cd out/arch/arm64/boot
          zip -r9 kunlun2_kernel_clang_$(date +%Y%m%d).zip META-INF bin files Image.lz4-dtb dtbo.img
          mv *.zip ../../../../../anykernel

      - name: Build gcc jd2019
        run: |
          export PATH=$(realpath workspace/clang/bin):$PATH
          export CROSS_COMPILE_COMPAT=arm-linux-gnueabihf-
          export CROSS_COMPILE=aarch64-linux-gnu-
          cd workspace/kernel
          rm -rf out
          sed -i 's/CONFIG_TOOLS_SUPPORT_RELR=y//g' arch/arm64/configs/jd2019_defconfig
          make O=out ARCH=arm64 jd2019_defconfig
          make O=out ARCH=arm64 -j$(nproc --all)
          cd out/arch/arm64/boot
          zip -r9 jd2019_kernel_gcc_$(date +%Y%m%d).zip META-INF bin files Image.lz4-dtb dtbo.img
          mv *.zip ../../../../../anykernel

      - name: Build gcc kunlun2
        run: |
          export PATH=$(realpath workspace/clang/bin):$PATH
          export CROSS_COMPILE_COMPAT=arm-linux-gnueabihf-
          export CROSS_COMPILE=aarch64-linux-gnu-
          cd workspace/kernel
          rm -rf out
          sed -i 's/CONFIG_TOOLS_SUPPORT_RELR=y//g' arch/arm64/configs/kunlun2_defconfig
          make O=out ARCH=arm64 kunlun2_defconfig
          make O=out ARCH=arm64 -j$(nproc --all)
          cd out/arch/arm64/boot
          zip -r9 kunlun2_kernel_gcc_$(date +%Y%m%d).zip META-INF bin files Image.lz4-dtb dtbo.img
          mv *.zip ../../../../../anykernel

      - name: Release kernel
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          name: kernel_${{ github.run_id }}
          files: |
            workspace/anykernel/*
